/*************************************************************************
	> File Name: g.cpp
	> Author: liangxianfeng
	> Mail:   liangxianfeng96@qq.com
	> Created Time: 2016年07月22日 星期五 09时37分17秒
 ************************************************************************/

#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<stack>
#include<map>
#include<set>
#include<vector>
#include<queue>
#include<string>
#include<cmath>
using namespace std;
#define ll long long
#define rep(i,n) for(int i =0; i < n; ++i)
#define CLR(x) memset(x,0,sizeof x)
#define MEM(a,b) memset(a,b,sizeof a)
#define pr(x) cout << #x << " = " << x << " ";
#define prln(x) cout << #x << " = " << x <<  endl; 
const int maxn = 4e5+100;
const int INF = 0x3f3f3f3f;
const int MOD = 1e9+7;
ll dp[2][(1<<17)+100];
ll res[17][17];
void cal(int n, int m){
    int now = 0, pre = 1;
    memset(dp[now], 0, sizeof dp[now]);
    dp[now][(1<<m)-1] = 1;
    for(int i = 1; i <= n; ++i){
        for(int j = 0; j < m; ++j){
            swap(now, pre);
            //pr(i);prln(j);
            memset(dp[now], 0, sizeof dp[now]);
            for(int k = 0; k < (1<<m); ++k){
                if(((k>>j)&1)){
                    dp[now][k^(1<<j)] = (dp[now][k^(1<<j)] + dp[pre][k]);
                }
                if(!((k>>j)&1)) {
                    dp[now][k|(1<<j)] = (dp[pre][k] +  dp[now][k|(1<<j)])%MOD;
                }
                if(j && ((k>>j)&1) && !((k>>(j-1))&1)){
                    dp[now][k|(1<<(j-1))] = (dp[now][k|(1<<(j-1))] + dp[pre][k])%MOD;
                }

            }
        }
    }
    res[n][m] = dp[now][(1<<m)-1];
}
ll f[20];
ll solve(int n, int m){
    ll ans = 0;
    int bcnt = 0, bsiz = 0, block[25];
    for(int k = 0; k < (1<<(m-1)); ++k){
        bcnt = 0, bsiz = 0;
        for(int i = 0; i < m-1; ++i){
            if((k>>i)&1){
                block[bcnt++] = ++bsiz;
                bsiz = 0;
            }else bsiz++;
        }
        block[bcnt++] = bsiz+1;
        for(int i = 1; i <= n; ++i){
            for(int j = 0; j < i; ++j){
                ll cnt = 1;
                for(int l = 0; l < bcnt; ++l){
                    cnt = (cnt*res[i-j][block[l]])%MOD;
                }
                if(!j) f[i] = cnt;
                else f[i] = (f[i] - cnt*f[j])%MOD;
            }
        }
        if(bcnt&1) ans = (ans + f[n])%MOD;
        else ans = (ans - f[n])%MOD;
    }
    return (ans+MOD)%MOD;
}
void cal2(){
    res[1][1]=0;
    res[1][2]=1;
    res[1][3]=0;
    res[1][4]=1;
    res[1][5]=0;
    res[1][6]=1;
    res[1][7]=0;
    res[1][8]=1;
    res[1][9]=0;
    res[1][10]=1;
    res[1][11]=0;
    res[1][12]=1;
    res[1][13]=0;
    res[1][14]=1;
    res[1][15]=0;
    res[1][16]=1;
    res[2][1]=1;
    res[2][2]=2;
    res[2][3]=3;
    res[2][4]=5;
    res[2][5]=8;
    res[2][6]=13;
    res[2][7]=21;
    res[2][8]=34;
    res[2][9]=55;
    res[2][10]=89;
    res[2][11]=144;
    res[2][12]=233;
    res[2][13]=377;
    res[2][14]=610;
    res[2][15]=987;
    res[2][16]=1597;
    res[3][1]=0;
    res[3][2]=3;
    res[3][3]=0;
    res[3][4]=11;
    res[3][5]=0;
    res[3][6]=41;
    res[3][7]=0;
    res[3][8]=153;
    res[3][9]=0;
    res[3][10]=571;
    res[3][11]=0;
    res[3][12]=2131;
    res[3][13]=0;
    res[3][14]=7953;
    res[3][15]=0;
    res[3][16]=29681;
    res[4][1]=1;
    res[4][2]=5;
    res[4][3]=11;
    res[4][4]=36;
    res[4][5]=95;
    res[4][6]=281;
    res[4][7]=781;
    res[4][8]=2245;
    res[4][9]=6336;
    res[4][10]=18061;
    res[4][11]=51205;
    res[4][12]=145601;
    res[4][13]=413351;
    res[4][14]=1174500;
    res[4][15]=3335651;
    res[4][16]=9475901;
    res[5][1]=0;
    res[5][2]=8;
    res[5][3]=0;
    res[5][4]=95;
    res[5][5]=0;
    res[5][6]=1183;
    res[5][7]=0;
    res[5][8]=14824;
    res[5][9]=0;
    res[5][10]=185921;
    res[5][11]=0;
    res[5][12]=2332097;
    res[5][13]=0;
    res[5][14]=29253160;
    res[5][15]=0;
    res[5][16]=366944287;
    res[6][1]=1;
    res[6][2]=13;
    res[6][3]=41;
    res[6][4]=281;
    res[6][5]=1183;
    res[6][6]=6728;
    res[6][7]=31529;
    res[6][8]=167089;
    res[6][9]=817991;
    res[6][10]=4213133;
    res[6][11]=21001799;
    res[6][12]=106912793;
    res[6][13]=536948224;
    res[6][14]=720246619;
    res[6][15]=704300462;
    res[6][16]=289288426;
    res[7][1]=0;
    res[7][2]=21;
    res[7][3]=0;
    res[7][4]=781;
    res[7][5]=0;
    res[7][6]=31529;
    res[7][7]=0;
    res[7][8]=1292697;
    res[7][9]=0;
    res[7][10]=53175517;
    res[7][11]=0;
    res[7][12]=188978103;
    res[7][13]=0;
    res[7][14]=124166811;
    res[7][15]=0;
    res[7][16]=708175999;
    res[8][1]=1;
    res[8][2]=34;
    res[8][3]=153;
    res[8][4]=2245;
    res[8][5]=14824;
    res[8][6]=167089;
    res[8][7]=1292697;
    res[8][8]=12988816;
    res[8][9]=108435745;
    res[8][10]=31151234;
    res[8][11]=940739768;
    res[8][12]=741005255;
    res[8][13]=164248716;
    res[8][14]=498190405;
    res[8][15]=200052235;
    res[8][16]=282756494;
    res[9][1]=0;
    res[9][2]=55;
    res[9][3]=0;
    res[9][4]=6336;
    res[9][5]=0;
    res[9][6]=817991;
    res[9][7]=0;
    res[9][8]=108435745;
    res[9][9]=0;
    res[9][10]=479521663;
    res[9][11]=0;
    res[9][12]=528655152;
    res[9][13]=0;
    res[9][14]=764896039;
    res[9][15]=0;
    res[9][16]=416579196;
    res[10][1]=1;
    res[10][2]=89;
    res[10][3]=571;
    res[10][4]=18061;
    res[10][5]=185921;
    res[10][6]=4213133;
    res[10][7]=53175517;
    res[10][8]=31151234;
    res[10][9]=479521663;
    res[10][10]=584044562;
    res[10][11]=472546535;
    res[10][12]=732130620;
    res[10][13]=186229290;
    res[10][14]=274787842;
    res[10][15]=732073997;
    res[10][16]=320338127;
    res[11][1]=0;
    res[11][2]=144;
    res[11][3]=0;
    res[11][4]=51205;
    res[11][5]=0;
    res[11][6]=21001799;
    res[11][7]=0;
    res[11][8]=940739768;
    res[11][9]=0;
    res[11][10]=472546535;
    res[11][11]=0;
    res[11][12]=177126748;
    res[11][13]=0;
    res[11][14]=513673802;
    res[11][15]=0;
    res[11][16]=881924366;
    res[12][1]=1;
    res[12][2]=233;
    res[12][3]=2131;
    res[12][4]=145601;
    res[12][5]=2332097;
    res[12][6]=106912793;
    res[12][7]=188978103;
    res[12][8]=741005255;
    res[12][9]=528655152;
    res[12][10]=732130620;
    res[12][11]=177126748;
    res[12][12]=150536661;
    res[12][13]=389322891;
    res[12][14]=371114062;
    res[12][15]=65334618;
    res[12][16]=119004311;
    res[13][1]=0;
    res[13][2]=377;
    res[13][3]=0;
    res[13][4]=413351;
    res[13][5]=0;
    res[13][6]=536948224;
    res[13][7]=0;
    res[13][8]=164248716;
    res[13][9]=0;
    res[13][10]=186229290;
    res[13][11]=0;
    res[13][12]=389322891;
    res[13][13]=0;
    res[13][14]=351258337;
    res[13][15]=0;
    res[13][16]=144590622;
    res[14][1]=1;
    res[14][2]=610;
    res[14][3]=7953;
    res[14][4]=1174500;
    res[14][5]=29253160;
    res[14][6]=720246619;
    res[14][7]=124166811;
    res[14][8]=498190405;
    res[14][9]=764896039;
    res[14][10]=274787842;
    res[14][11]=513673802;
    res[14][12]=371114062;
    res[14][13]=351258337;
    res[14][14]=722065660;
    res[14][15]=236847118;
    res[14][16]=451896972;
    res[15][1]=0;
    res[15][2]=987;
    res[15][3]=0;
    res[15][4]=3335651;
    res[15][5]=0;
    res[15][6]=704300462;
    res[15][7]=0;
    res[15][8]=200052235;
    res[15][9]=0;
    res[15][10]=732073997;
    res[15][11]=0;
    res[15][12]=65334618;
    res[15][13]=0;
    res[15][14]=236847118;
    res[15][15]=0;
    res[15][16]=974417347;
    res[16][1]=1;
    res[16][2]=1597;
    res[16][3]=29681;
    res[16][4]=9475901;
    res[16][5]=366944287;
    res[16][6]=289288426;
    res[16][7]=708175999;
    res[16][8]=282756494;
    res[16][9]=416579196;
    res[16][10]=320338127;
    res[16][11]=881924366;
    res[16][12]=119004311;
    res[16][13]=144590622;
    res[16][14]=451896972;
    res[16][15]=974417347;
    res[16][16]=378503901;
}
ll temp[20][20];
void cal3(){
    temp[1][1]=0;
    temp[1][2]=1;
    temp[1][3]=0;
    temp[1][4]=0;
    temp[1][5]=0;
    temp[1][6]=0;
    temp[1][7]=0;
    temp[1][8]=0;
    temp[1][9]=0;
    temp[1][10]=0;
    temp[1][11]=0;
    temp[1][12]=0;
    temp[1][13]=0;
    temp[1][14]=0;
    temp[1][15]=0;
    temp[1][16]=0;
    temp[2][1]=1;
    temp[2][2]=0;
    temp[2][3]=0;
    temp[2][4]=0;
    temp[2][5]=0;
    temp[2][6]=0;
    temp[2][7]=0;
    temp[2][8]=0;
    temp[2][9]=0;
    temp[2][10]=0;
    temp[2][11]=0;
    temp[2][12]=0;
    temp[2][13]=0;
    temp[2][14]=0;
    temp[2][15]=0;
    temp[2][16]=0;
    temp[3][1]=0;
    temp[3][2]=0;
    temp[3][3]=0;
    temp[3][4]=0;
    temp[3][5]=0;
    temp[3][6]=0;
    temp[3][7]=0;
    temp[3][8]=0;
    temp[3][9]=0;
    temp[3][10]=0;
    temp[3][11]=0;
    temp[3][12]=0;
    temp[3][13]=0;
    temp[3][14]=0;
    temp[3][15]=0;
    temp[3][16]=0;
    temp[4][1]=0;
    temp[4][2]=0;
    temp[4][3]=0;
    temp[4][4]=0;
    temp[4][5]=0;
    temp[4][6]=0;
    temp[4][7]=0;
    temp[4][8]=0;
    temp[4][9]=0;
    temp[4][10]=0;
    temp[4][11]=0;
    temp[4][12]=0;
    temp[4][13]=0;
    temp[4][14]=0;
    temp[4][15]=0;
    temp[4][16]=0;
    temp[5][1]=0;
    temp[5][2]=0;
    temp[5][3]=0;
    temp[5][4]=0;
    temp[5][5]=0;
    temp[5][6]=6;
    temp[5][7]=0;
    temp[5][8]=108;
    temp[5][9]=0;
    temp[5][10]=1182;
    temp[5][11]=0;
    temp[5][12]=10338;
    temp[5][13]=0;
    temp[5][14]=79818;
    temp[5][15]=0;
    temp[5][16]=570342;
    temp[6][1]=0;
    temp[6][2]=0;
    temp[6][3]=0;
    temp[6][4]=0;
    temp[6][5]=6;
    temp[6][6]=0;
    temp[6][7]=124;
    temp[6][8]=62;
    temp[6][9]=1646;
    temp[6][10]=1630;
    temp[6][11]=18120;
    temp[6][12]=25654;
    temp[6][13]=180288;
    temp[6][14]=317338;
    temp[6][15]=1684956;
    temp[6][16]=3416994;
    temp[7][1]=0;
    temp[7][2]=0;
    temp[7][3]=0;
    temp[7][4]=0;
    temp[7][5]=0;
    temp[7][6]=124;
    temp[7][7]=0;
    temp[7][8]=13514;
    temp[7][9]=0;
    temp[7][10]=765182;
    temp[7][11]=0;
    temp[7][12]=32046702;
    temp[7][13]=0;
    temp[7][14]=136189727;
    temp[7][15]=0;
    temp[7][16]=378354090;
    temp[8][1]=0;
    temp[8][2]=0;
    temp[8][3]=0;
    temp[8][4]=0;
    temp[8][5]=108;
    temp[8][6]=62;
    temp[8][7]=13514;
    temp[8][8]=25506;
    temp[8][9]=991186;
    temp[8][10]=3103578;
    temp[8][11]=57718190;
    temp[8][12]=238225406;
    temp[8][13]=965022920;
    temp[8][14]=388537910;
    temp[8][15]=937145938;
    temp[8][16]=315565230;
    temp[9][1]=0;
    temp[9][2]=0;
    temp[9][3]=0;
    temp[9][4]=0;
    temp[9][5]=0;
    temp[9][6]=1646;
    temp[9][7]=0;
    temp[9][8]=991186;
    temp[9][9]=0;
    temp[9][10]=262834138;
    temp[9][11]=0;
    temp[9][12]=462717719;
    temp[9][13]=0;
    temp[9][14]=560132342;
    temp[9][15]=0;
    temp[9][16]=699538539;
    temp[10][1]=0;
    temp[10][2]=0;
    temp[10][3]=0;
    temp[10][4]=0;
    temp[10][5]=1182;
    temp[10][6]=1630;
    temp[10][7]=765182;
    temp[10][8]=3103578;
    temp[10][9]=262834138;
    temp[10][10]=759280991;
    temp[10][11]=264577134;
    temp[10][12]=712492587;
    temp[10][13]=886997066;
    temp[10][14]=577689269;
    temp[10][15]=510014880;
    temp[10][16]=807555438;
    temp[11][1]=0;
    temp[11][2]=0;
    temp[11][3]=0;
    temp[11][4]=0;
    temp[11][5]=0;
    temp[11][6]=18120;
    temp[11][7]=0;
    temp[11][8]=57718190;
    temp[11][9]=0;
    temp[11][10]=264577134;
    temp[11][11]=0;
    temp[11][12]=759141342;
    temp[11][13]=0;
    temp[11][14]=567660301;
    temp[11][15]=0;
    temp[11][16]=47051173;
    temp[12][1]=0;
    temp[12][2]=0;
    temp[12][3]=0;
    temp[12][4]=0;
    temp[12][5]=10338;
    temp[12][6]=25654;
    temp[12][7]=32046702;
    temp[12][8]=238225406;
    temp[12][9]=462717719;
    temp[12][10]=712492587;
    temp[12][11]=759141342;
    temp[12][12]=398579168;
    temp[12][13]=83006813;
    temp[12][14]=821419653;
    temp[12][15]=942235780;
    temp[12][16]=558077885;
    temp[13][1]=0;
    temp[13][2]=0;
    temp[13][3]=0;
    temp[13][4]=0;
    temp[13][5]=0;
    temp[13][6]=180288;
    temp[13][7]=0;
    temp[13][8]=965022920;
    temp[13][9]=0;
    temp[13][10]=886997066;
    temp[13][11]=0;
    temp[13][12]=83006813;
    temp[13][13]=0;
    temp[13][14]=690415372;
    temp[13][15]=0;
    temp[13][16]=620388364;
    temp[14][1]=0;
    temp[14][2]=0;
    temp[14][3]=0;
    temp[14][4]=0;
    temp[14][5]=79818;
    temp[14][6]=317338;
    temp[14][7]=136189727;
    temp[14][8]=388537910;
    temp[14][9]=560132342;
    temp[14][10]=577689269;
    temp[14][11]=567660301;
    temp[14][12]=821419653;
    temp[14][13]=690415372;
    temp[14][14]=796514774;
    temp[14][15]=696587391;
    temp[14][16]=175421667;
    temp[15][1]=0;
    temp[15][2]=0;
    temp[15][3]=0;
    temp[15][4]=0;
    temp[15][5]=0;
    temp[15][6]=1684956;
    temp[15][7]=0;
    temp[15][8]=937145938;
    temp[15][9]=0;
    temp[15][10]=510014880;
    temp[15][11]=0;
    temp[15][12]=942235780;
    temp[15][13]=0;
    temp[15][14]=696587391;
    temp[15][15]=0;
    temp[15][16]=856463275;
    temp[16][1]=0;
    temp[16][2]=0;
    temp[16][3]=0;
    temp[16][4]=0;
    temp[16][5]=570342;
    temp[16][6]=3416994;
    temp[16][7]=378354090;
    temp[16][8]=315565230;
    temp[16][9]=699538539;
    temp[16][10]=807555438;
    temp[16][11]=47051173;
    temp[16][12]=558077885;
    temp[16][13]=620388364;
    temp[16][14]=175421667;
    temp[16][15]=856463275;
    temp[16][16]=341279366;
}
int main(){
#ifdef LOCAL
	freopen("/home/zeroxf/桌面/in.txt","r",stdin);
    //freopen("/home/zeroxf/桌面/out.txt","w",stdout);
#endif
    for(int i = 1; i <= 16; ++i){
        for(int j = 1; j <= 16; ++j){
            //cal(i,j);
            //pr(i);pr(j);prln(res[i][j]);
            //printf("res[%d][%d]=%d;\n",i,j,res[i][j]);
        }
    }
    cal2();
    cal3();
    memset(f, 0, sizeof f);
    int t, n, m;
    //scanf("%d", &t);
    while(scanf("%d%d", &n, &m)!=EOF){
        //scanf("%d%d", &n, &m);
        //pr(n);prln(m);
        if(n < m) swap(n, m);
        printf("%lld\n", temp[n][m]);
    }

    //for(int i = 1; i <= 16; ++i){
        //for(int j = 1; j <= 16; ++j){
            //int x = solve(i,j);
            //printf("temp[%d][%d]=%d;\n",i,j,x);
        //}
    //}
	return 0;
}
